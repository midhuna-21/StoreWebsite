<%- include('../layouts/header.ejs') %>

	<!-- checkout -->
	<div class="page-content p-8 ">
		<div class="checkout">
		  <div class="container mx-auto">
			 <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
	 
				<!-- Address Section (Left) -->
				<div class="address-section ml-20 ">
				  <h3 class="text-2xl font-semibold text-gray-800 mb-4">Select Address:</h3>
				  <div class="space-y-4">
					 <% if (user.address && user.address.length > 0) { %>
						<% user.address.forEach(address => { %>
						  <div class="address-input-container border p-4 rounded-md shadow-sm hover:shadow-lg transition">
							 <input form="paymentForm" type="radio" value="<%= address._id %>" name="addressId" id="addressId" class="mr-4">
							 <div class="text-sm text-gray-700">
								<p><%= address.name %></p>
								<p><%= address.address %></p>
								<p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
								<p>Phone: <%= address.tel %></p>
							 </div>
						  </div>
						<% }); %>
					 <% } else { %>
						<p class="text-gray-600">No addresses found. Please add an address.</p>
					 <% } %>
	 
					 <% if (user.address.length < 4) { %>
						<a href="/address?ret=checkout" class="btn btn-outline-primary-2 mt-4 inline-block px-6 py-2 text-sm font-semibold text-blue-600 border-2 border-blue-600 rounded-md hover:bg-blue-600 hover:text-white transition">Add an address</a>
					 <% } else { %>
						<p class="mt-4 text-sm text-red-600">You have reached the maximum address limit. Please edit or delete an existing address to add a new one.</p>
					 <% } %>
				  </div>
				</div>
	 
				<!-- Order Summary (Right) -->
			<div class="mr-20">
				<aside class="summary bg-white p-6 rounded-lg shadow-lg ">
					<h3 class="text-2xl font-semibold text-gray-800 mb-6">Order Summary</h3>
					<table class="table-auto w-full mb-6">
					  <tbody>
						 <tr>
							<td class="py-2 text-gray-600">Shipping</td>
							<td class="py-2 text-right font-semibold">Free shipping</td>
						 </tr>
						 <tr>
							<td class="py-2 text-gray-600">Wallet Balance</td>
							<td class="py-2 text-right font-semibold">₹<%= wallet.balance %></td>
						 </tr>
						 <% if (coupon) { %>
							<tr>
							  <td class="py-2 text-gray-600">Discount Price</td>
							  <td class="py-2 text-right font-semibold">₹<%= discount %></td>
							</tr>
						 <% } %>
						 <tr>
							<td class="py-2 text-gray-600">Total Price</td>
							<td class="py-2 text-right font-semibold">₹<%= calculateTotalPrice %></td>
						 </tr>
					  </tbody>
					</table>
	  
					<!-- Apply Coupon Section -->
					<div class="apply-coupon mb-6">
					  <% if (coupon) { %>
						 <div class="input-group">
							<input form="paymentForm" type="text" id="couponCode" class="form-control w-full px-4 py-2 border rounded-md" placeholder="Coupon Code" value="<%= coupon.couponCode %>">
							<div class="input-group-append">
							  <a href="/coupons" class="btn btn-outline-primary-2 px-6 py-2 text-sm font-semibold text-blue-600 border-2 border-blue-600 rounded-md hover:bg-blue-600 hover:text-white transition">Apply</a>
							</div>
						 </div>
					  <% } else { %>
						 <div class="input-group">
							<input form="paymentForm" type="text" id="couponCode" class="form-control w-full px-4 py-2 border rounded-md" placeholder="Coupon Code">
							<div class="input-group-append">
							  <a href="/coupons" class="btn btn-outline-primary-2 px-6 py-2 text-sm font-semibold text-blue-600 border-2 border-blue-600 rounded-md hover:bg-blue-600 hover:text-white transition">Apply</a>
							</div>
						 </div>
					  <% } %>
					</div>
	  
					<!-- Payment Method Section -->
					<div class="payment-method mb-6">
					  <h4 class="text-lg font-semibold text-gray-800 mb-4">Payment Method</h4>
					  <div class="form-group form-check mb-4">
						 <input form="paymentForm" type="radio" name="paymentMethod" id="f-option4" value="wallet" class="form-check-input">
						 <label class="form-check-label" for="payWithWallet">Wallet Only</label>
					  </div>
					  <div class="form-group form-check mb-4">
						 <input form="paymentForm" type="radio" name="paymentMethod" id="f-option5" value="cod" class="form-check-input">
						 <label class="form-check-label" for="cashOnDelivery">Cash on Delivery</label>
					  </div>
					  <div class="form-group form-check mb-6">
						 <input form="paymentForm" type="radio" name="paymentMethod" id="f-option6" value="online" class="form-check-input">
						 <label class="form-check-label" for="upiPayment">Online Payment</label>
					  </div>
					</div>
	  
					<!-- Place Order Button -->
					<button class="btn btn-primary bg-blue-500 w-full py-3 text-lg font-semibold text-white rounded-md hover:bg-blue-700 transition"
					  onclick="makePurchase('<%= calculateTotalPrice %>')">
					  Place Order
					</button>
				 </aside>
			</div>
			 </div>
		  </div>
		</div>
	 </div>
	 
	 

		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
		<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

		<!--  -->
		<script>
			// Get all radio buttons for address selection
			const addressRadios = document.querySelectorAll('input[name="address"]');

			// Add a click event listener to each radio button
			addressRadios.forEach((radio) => {
				radio.addEventListener('click', function () {
					const selectedAddress = this.value;
					console.log(`Selected Address ID: ${selectedAddress}`);
				});
			});

		</script>
		<script>

			function makePurchase(GrandTotal) {

				let addressId = $("input[name='addressId']:checked").val();
				const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
				if (!addressId || !selectedPaymentMethod) {
					Swal.fire({
						icon: 'error',
						title: 'Oops...',
						text: 'Please select both an address and a payment method before placing your order.'
					});
					return; // Prevent further processing
				}
				let walletbutton = document.getElementById("f-option4")
				let codbutton = document.getElementById("f-option5")
				let onlinebutton = document.getElementById("f-option6")

				let payment


				if (walletbutton.checked) {
					payment = walletbutton.value
				}
				else if (codbutton.checked) {
					payment = codbutton.value
				} else if (onlinebutton.checked) {
					payment = onlinebutton.value
				}

				$.ajax({
					url: '/checkout',
					method: 'POST',
					data: {
						addressId: addressId,
						paymentMethod: payment,
						GrandTotal: GrandTotal

					},
					success: (response) => {
						console.log('Received response:', response);

						if (response.error === 'Insufficient balance in wallet') {
							Swal.fire({
								icon: 'error',
								title: 'Insufficient Balance',
								text: 'You have insufficient balance in your wallet.'
							});
						} else if (response.method === 'wallet') {
							showWalletSuccessMessage();
						} else if (response.method == 'cod') {

							Swal.fire({
								title: "Order success",
								text: "order placed successfully",
								icon: "success",
								showCancelButton: true,
								confirmButtonText: "view orders",
								cancelButtonText: "continue shopping",
								reverseButtons: true
							}).then(function (result) {
								if (result.value) {
									location.href = '/orderlist'

								} else if (result.dismiss === "cancel") {
									location.href = '/products'
								}
							});

						} else if (response.method === 'online') {
							console.log('generaterOrder', response.generateOrder)
							const options = {
								"key": "rzp_test_XLuQj8MFj0FaxS", // Enter the Key ID generated from the Dashboard
								"amount": response.generateOrder.amount_due, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
								"currency": "INR",
								"name": "Future Furniture", //your business name
								"description": "Test Transaction",
								"image": "https://example.com/your_logo",
								"order_id": response.generateOrder.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
								"handler": function (status) {


									verifyPayment(response, status)
								},
								"prefill": {
									"name": "Gaurav Kumar",
									"email": "gaurav.kumar@example.com",
									"contact": "9000090000"
								},
								"notes": {
									"address": "Razorpay Corporate Office"
								},
								"theme": {
									"color": "#3399cc"
								}
							};

							var rzp1 = new Razorpay(options);
							rzp1.open();


						} else {

							Swal.fire({
								icon: 'error',
								title: 'Oops...',
								text: 'Your cart is empty. Please add items to your cart before placing an order.'
							});


						}
					},
					error: (err) => {
						Swal.fire({
							icon: 'error',
							title: 'Error Occurred',
							text: "Can't process order, an error occurred: ",
							timer: 5000
						});
					}
				})
			}

			function verifyPayment(order, payment) {
				console.log('verify payemennn')
				$.ajax({
					url: '/verifyPayment',
					method: 'POST',
					data: {
						order,
						payment
					},
					success: (response) => {
						if (response.status) {

							Swal.fire({
								title: "Order success",
								text: "order placed successfully",
								icon: "success",
								showCancelButton: true,
								confirmButtonText: "view orders",
								cancelButtonText: "continue shopping",
								reverseButtons: true
							}).then(function (result) {
								if (result.value) {
									location.href = '/orderlist'

								} else if (result.dismiss === "cancel") {
									location.href = '/products'
								}
							});
						} else {
							Swal.fire({
								icon: 'error',
								title: 'Payment Failed',
								text: 'Payment failed! '
							});
						}
					}
				})
			}
			function showWalletSuccessMessage() {
				Swal.fire({
					icon: 'success',
					title: 'Wallet Payment Successful!',
					text: 'Your order was placed successfully using your wallet balance.',
					showCancelButton: true,
					cancelButtonText: 'Continue Shopping',
					confirmButtonText: 'View Orders',
					cancelButtonColor: '#d33',
					confirmButtonColor: 'btn-success',
					heightAuto: false,
				}).then((result) => {
					if (result.value) {
						// Redirect to order details page
						location.href = '/orderlist'
					} else if (result.dismiss === 'cancel') {
						// Redirect to product list page
						location.href = '/products';
					}
				});
			}



		</script>

		<script>
			window.addEventListener('DOMContentLoaded', function () {
				const addressIndex =
					fetch('/selected-address/')
						.then(response => {

							response.json(); // Assuming the server returns JSON data
						})
						.then(data => {
							// Handle the data from the response
							console.log(data);
						})
						.catch(error => {
							// Handle any errors that occurred during the fetch
							console.error('Fetch error:', error);
						});
			})
		</script>

		<%- include('../layouts/footer.ejs') %>